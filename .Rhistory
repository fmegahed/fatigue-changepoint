install.packages("RJSDMX")
library(RJSDMX)
library(pacman)
p_load(RJSDMX,rJava)
p_load(RJSDMX,rJava)
if (Sys.getenv("JAVA_HOME")!="") Sys.setenv(JAVA_HOME="")
p_load(RJSDMX,rJava)
library(fromJSON)
library(FromJSON)
p_load(fromJSON)
p_load(jsonlite)
trial <- fromJSON("http://wits.worldbank.org/API/V1/SDMX/V21/datasource/TRN/reporter/840/partner/000/product/020110/year/2000/datatype/reported")
p_load(jsonlite,curl)
trial <- fromJSON("http://wits.worldbank.org/API/V1/SDMX/V21/datasource/TRN/reporter/840/partner/000/product/020110/year/2000/datatype/reported")
p_load(jsonlite,curl,XML)
trial <- xmlParse("http://wits.worldbank.org/API/V1/SDMX/V21/datasource/TRN/reporter/840/partner/000/product/020110/year/2000/datatype/reported")
trial <- xmlParse("http://wits.worldbank.org/API/V1/SDMX/V21/datasource/TRN/reporter/840/partner/000/product/020110/year/2000/datatype/reported")
trial <- xmlParse("http://wits.worldbank.org/API/V1/wits/WITSApiService.svc/datasource/trn/dataavailability/")
trial <- xmlParse("http://wits.worldbank.org/API/V1/SDMX/V21/rest/dataflow/wbg_wits/")
# A Program to Assess Correlation with Kendall
require(MASS)
# Generating a 10*2 matrix with a correlation of 0.2
out <- mvrnorm(10, mu = c(0,0), Sigma = matrix(c(1,0.2,0.2,1), ncol = 2),
empirical = TRUE) # Generating a 10*2 matrix with a correlation of 0.2
cor(out, method="kendall", use="pairwise")
cor.test(out[,1],out[,1], method="kendall", use="pairwise")
cor.test(out[,1],out[,2], method="kendall", use="pairwise")
test <- cor.test(out[,1],out[,2], method="kendall", use="pairwise")
p.val <- test$p.value
?rep
p.val <- rep(99,times=10000) # initilization
?seq
j <- seq(from=0.15,to=0.8,by=0.01)
# A Program to Assess Correlation with Kendall
rm(list=ls())
cat("\014")
# Required Libraries
require(MASS) # for multivariate normal
counter = 0
# Required Libraries
require(MASS) # for multivariate normal
# Initilizing variables
p.val <- rep(99,times=10000) # initilization
j <- seq(from=0.15,to=0.8,by=0.01)
counter = 0
for (k in j){
counter = counter + 1
for (i in 1:10000) {
out <- mvrnorm(10, mu = c(0,0), Sigma = matrix(c(1,0.2,0.2,1), ncol = 2),
empirical = TRUE) # Generating a 10*2 matrix with a correlation of 0.2
test <- cor.test(out[,1],out[,2], method="kendall", use="pairwise")
p.val[i,counter] <- test$p.value
}
}
p.val <- data.frame(matrix(nrow =10000, ncol = length(j)) # df initilization
p.val <- data.frame(matrix(nrow =10000, ncol = length(j))) # df initilization
p.val <- data.frame(matrix(nrow =10000, ncol = length(j))) # df initilization
counter = 0
for (k in j){
counter = counter + 1
for (i in 1:10000) {
out <- mvrnorm(10, mu = c(0,0), Sigma = matrix(c(1,0.2,0.2,1), ncol = 2),
empirical = TRUE) # Generating a 10*2 matrix with a correlation of 0.2
test <- cor.test(out[,1],out[,2], method="kendall", use="pairwise")
p.val[i,counter] <- test$p.value
}
}
p.val.99thperc <- apply(p.val,2,quantile(p.val,0.99))
p.val.99thperc <- apply(p.val,2,quantile(x,0.99))
p.val.99thperc <- apply(p.val,2,quantile, probs=0.99)
p.val.99thperc <- apply(p.val,2,quantile, probs=0.99)
p.val.99thperc <- data.frame(apply(p.val,2,quantile, probs=0.99))
View(p.val.99thperc)
View(p.val)
summary(p.val.99thperc)
p.val.99thperc <- data.frame(apply(p.val,2,quantile, probs=0.95))
summary(p.val.99thperc)
p.val.99thperc <- data.frame(apply(p.val,2,quantile, probs=0.5))
summary(p.val.99thperc)
p.val.99thperc <- data.frame(apply(p.val,2,quantile, probs=0.01))
summary(p.val.99thperc)
# Initilizing variables
j <- seq(from=0.1,to=0.8,by=0.02)
p.val <- data.frame(matrix(nrow =10000, ncol = length(j))) # df initilization
counter = 0
for (k in j){
counter = counter + 1
for (i in 1:10000) {
out <- mvrnorm(20, mu = c(0,0), Sigma = matrix(c(1,0.2,0.2,1), ncol = 2),
empirical = TRUE) # Generating a 20*2 matrix with a correlation of 0.2
test <- cor.test(out[,1],out[,2], method="kendall", use="pairwise")
p.val[i,counter] <- test$p.value
}
}
p.val.99thperc <- data.frame(apply(p.val,2,quantile, probs=0.01))
summary(p.val.99thperc)
p.val.99thperc <- data.frame(apply(p.val,2,quantile, probs=0.05))
summary(p.val.99thperc)
View(p.val.99thperc)
p.val.99thperc <- data.frame(apply(p.val,2,quantile, probs=0.95))
p.val.99thperc <- data.frame(apply(p.val,2,quantile, probs=0.5))
summary(p.val[,20])
summary(p.val[,30])
summary(p.val[,40])
summary(p.val[,36])
p.val.99thperc <- data.frame(apply(p.val,2,<0.05))
p.val.99thperc <- data.frame(apply(p.val,2,<, 0.05))
p.val.99thperc <- data.frame(apply(p.val,2,eval, <0.05))
p.val.99thperc <- data.frame(apply(p.val,2,quantile, prob=0.05))
summary(p.val.99thperc)
j <- seq(from=0.1,to=0.95,by=0.05)
p.val <- data.frame(matrix(nrow =10000, ncol = length(j))) # df initilization
counter = 0
for (k in j){
counter = counter + 1
for (i in 1:10000) {
out <- mvrnorm(50, mu = c(0,0), Sigma = matrix(c(1,0.2,0.2,1), ncol = 2),
empirical = TRUE) # Generating a 20*2 matrix with a correlation of 0.2
test <- cor.test(out[,1],out[,2], method="kendall", use="pairwise")
p.val[i,counter] <- test$p.value
}
}
j <- seq(from=0.1,to=0.95,by=0.05)
p.val <- data.frame(matrix(nrow =10000, ncol = length(j))) # df initilization
counter = 0
for (k in j){
counter = counter + 1
for (i in 1:10000) {
out <- mvrnorm(10, mu = c(0,0),
Sigma = matrix(c(1,j[counter],j[counter],1), ncol = 2),
empirical = TRUE) # Generating a 20*2 matrix with a correlation of 0.2
test <- cor.test(out[,1],out[,2], method="kendall", use="pairwise")
p.val[i,counter] <- test$p.value
}
}
p.val.95thperc <- data.frame(apply(p.val,2,quantile, prob=0.05))
summary(p.val.95thperc)
?countif
sum(p.val.95thperc<0.05)
p.val.99thperc <- data.frame(apply(p.val,2,quantile, prob=0.01))
sum(p.val.99thperc<0.01)
rm(test)
rm(c(out,counter))
rm(out,counter)
colnames(p.val,prefix = "Corr.Coeff=") <- j
View(p.val)
colnames(p.val,prefix = "Corr.Coeff=") <- as.character(j)
?colnames
colnames(p.val, prefix = "CorrCoeff") <- as.character(j)
ans <- as.character(j)
lengh(ans)
length(ans)
colnames(p.val, prefix = "CorrCoeff") <- t(as.character(j))
colnames(p.val) <- paste("Corr.Coeff=",as.character(j))
View(p.val)
colnames(p.val) <- paste("Corr.Coeff=",as.character(j),sep = "")
p.val.95thperc <- data.frame(apply(p.val,2,quantile, prob=0.05))
p.val.99thperc <- data.frame(apply(p.val,2,quantile, prob=0.01))
View(p.val.95thperc)
p.05.coefficients <- which(sum(p.val.95thperc<0.05))
p.05.coefficients <- which(p.val.95thperc<0.05)
p.05.coefficients <- names(p.val.95thperc<0.05)
p.05.coefficients <- row.names(p.val.95thperc<0.05)
p.05.coefficients <- row.names(which(p.val.95thperc<0.05))
p.05.coefficients <- row.names(p.val.95thperc[p.05.coefficients])
p.05.coefficients <- which(p.val.95thperc<0.05)
p.val.95thperc[9]
p.05.coefficients <- which(p.val.95thperc<0.05)
p.05.coefficients <- row.names(p.val.95thperc[,p.05.coefficients])
p.05.coefficients <- row.names(p.val.95thperc[p.05.coefficients,])
p.05.coefficients <- row.names(p.val.95thperc[9,])
p.05.coefficients <- p.val.95thperc[9,]
p.05.coefficients <- col.names(p.val.95thperc[9,])
p.05.coefficients <- colnames(p.val.95thperc[9,])
p.05.coefficients <- rownames(p.val.95thperc[9,])
View(p.val.99thperc)
p.05.coefficients <- which(p.val.95thperc<0.05)
p.05.coefficients <- which(p.val.95thperc<0.05)
p.01.coefficients <- which(p.val.99thperc<0.01)
save(file="KendallTau", list = c(p.05.coefficients,p.01.coefficients,
p.val.99thperc,p.val.95thperc,
p.val))
save(file="KendallTau.RData", list = c(p.05.coefficients,p.01.coefficients,
p.val.99thperc,p.val.95thperc,
p.val))
save(list = c(p.05.coefficients,p.01.coefficients,
p.val.99thperc,p.val.95thperc,
p.val), file="KendallTau.RData")
?save
save(c(p.05.coefficients,p.01.coefficients,
p.val.99thperc,p.val.95thperc,
p.val), file="KendallTau.RData")
save(p.05.coefficients,p.01.coefficients,
p.val.99thperc,p.val.95thperc,
p.val, file="KendallTau.RData")
# Package Installation and Setting the Working Dir
#--------------------------------------------------
#install.packages("pacman") # install if needed
library(pacman)
p_load(osmdata)
library(lpSolve)
f.obj < c(0.75, 0.5, 0.15)
f.obj <- c(0.75, 0.5, 0.15)
f.con <- matrix(c(35,0.5,0.5,
60, 300, 10,
30, 20, 10), nrow=3,
byrow = TRUE)
f.dir <- c(">=", ">=", ">=")
f.rhs <- c(0.5, 15, 4)
LP_Solution <- lp("min", f.obj, f.con, f.dir, f.rhs, all.bin = F)
LP_Solution
LP_Solution$solution
knitr::opts_chunk$set(echo = TRUE)
rm(list = ls()) # clear global environment
graphics.off() # close all graphics
library(pacman) # needs to be installed first
p_load(R.matlab, plotly, extrafont, grDevices, gridExtra,
dplyr, stringr, tidyverse, utils, reshape2,
anomalize, MVN, fractal)
?data.frame
load("C:/Users/megahefm/AppData/Local/Temp/Temp1_Notebook-112_Prediction_Classification-master.zip/Notebook-112_Prediction_Classification-master/serie1_telde.RData")
View(day_df)
View(serie1)
str(serie1)
load("C:/Users/megahefm/AppData/Local/Temp/Temp1_Notebook-112_Prediction_Classification-master.zip/Notebook-112_Prediction_Classification-master/serie1_orotava.RData")
load("C:/Users/megahefm/AppData/Local/Temp/Temp1_Notebook-112_Prediction_Classification-master.zip/Notebook-112_Prediction_Classification-master/serie1_telde.RData")
load("C:/Users/megahefm/AppData/Local/Temp/Temp1_Notebook-112_Prediction_Classification-master.zip/Notebook-112_Prediction_Classification-master/data1_el_hierro.RData")
View(data.tree)
load("C:/Users/megahefm/AppData/Local/Temp/Temp1_Notebook-112_Prediction_Classification-master.zip/Notebook-112_Prediction_Classification-master/serie1_orotava.RData")
load("C:/Users/megahefm/AppData/Local/Temp/Temp1_Notebook-112_Prediction_Classification-master.zip/Notebook-112_Prediction_Classification-master/serie1_telde.RData")
str(data.tree)
str(serie1)
knitr::opts_chunk$set(echo = TRUE)
library(pacman)
p_load(RPostgres)
wrds <- dbConnect(Postgres(),
host='wrds-pgdata.wharton.upenn.edu',
port=9737,
dbname='wrds',
sslmode='require')
library(pacman)
p_load(RPostgres)
wrds <- dbConnect(Postgres(),
host='wrds-pgdata.wharton.upenn.edu',
port=9737,
dbname='wrds',
sslmode='require')
?dbConnect
library(pacman)
p_load(RPostgres)
wrds <- dbConnect(Postgres(),
host='wrds-pgdata.wharton.upenn.edu',
port=9737,
dbname='wrds',
sslmode='require',
user = 'fmegahed',
password = 'BBRX2Owfoeh8@Do@')
library(pacman)
p_load(RPostgres)
source("authentication_wrds.R")
wrds <- dbConnect(Postgres(),
host='wrds-pgdata.wharton.upenn.edu',
port=9737,
dbname='wrds',
sslmode='require')
library(pacman)
p_load(RPostgres)
source("J:\\Team Drives\\Regions Project\\Codeauthentication_wrds.R")
library(pacman)
p_load(RPostgres)
source("J:/Team Drives/Regions Project/Codeauthentication_wrds.R")
library(pacman)
p_load(RPostgres)
source("J:/Team Drives/Regions Project/Codeauthentication_wrds.R")
library(pacman)
p_load(RPostgres)
source("J:/Team Drives/Regions Project/Code/authentication_wrds.R")
# wrds <- dbConnect(Postgres(),
#                   host='wrds-pgdata.wharton.upenn.edu',
#                   port=9737,
#                   dbname='wrds',
#                   sslmode='require')
# res <- dbSendQuery(wrds, "select a.gvkey, a.datadate, a.tic,
#                    a.conm, a.at, a.lt, b.prccm, b.cshoq
#                    from comp.funda a join comp.secm b
#                    on a.gvkey = b.gvkey
#                    and a.datadate = b.datadate
#                    where a.tic = 'EGN'
#                    and a.datafmt = 'STD'
#                    and a.consol = 'C'
#                    and a.indfmt = 'INDL'")
# data <- dbFetch(res, n = -1)
# dbClearResult(res)
# data
library(pacman)
p_load(RPostgres)
source("J:/Team Drives/Regions Project/Code/authentication_wrds.R")
wrds <- dbConnect(Postgres(),
host='wrds-pgdata.wharton.upenn.edu',
port=9737,
dbname='wrds',
sslmode='require')
library(pacman)
p_load(RPostgres)
source("J:/Team Drives/Regions Project/Code/authentication_wrds.R")
wrds <- dbConnect(Postgres(),
host='wrds-pgdata.wharton.upenn.edu',
port=9737,
dbname='wrds',
sslmode='require',
user= user,
password = password)
res <- dbSendQuery(wrds, "select a.gvkey, a.datadate, a.tic,
a.conm, a.at, a.lt, b.prccm, b.cshoq
from comp.funda a join comp.secm b
on a.gvkey = b.gvkey
and a.datadate = b.datadate
where a.tic = 'EGN'
and a.datafmt = 'STD'
and a.consol = 'C'
and a.indfmt = 'INDL'")
data <- dbFetch(res, n = -1)
dbClearResult(res)
data
library(pacman)
p_load(RPostgres)
source("J:/Team Drives/Regions Project/Code/authentication_wrds.R")
wrds <- dbConnect(Postgres(),
host='wrds-pgdata.wharton.upenn.edu',
port=9737,
dbname='wrds',
sslmode='require',
user= user,
password = password)
res <- dbSendQuery(wrds, "select q.gvkey, q.datadate, q.tic,
q.conm, q.at, q.lt, b.prccm, b.cshoq
from comp.funda q join comp.secm b
on q.gvkey = b.gvkey
and q.datadate = b.datadate
where q.tic = 'EGN'
and q.datafmt = 'STD'
and q.consol = 'C'
and q.indfmt = 'INDL'")
data <- dbFetch(res, n = -1)
dbClearResult(res)
data
unlink('J:/My Drive/Miami/Research/2018/Amir - Changepoint Paper/Code/GitHub/fatigue-changepoint/ChangepointAnalysisForFatigueData_cache', recursive = TRUE)
load(file = "./Data/RGenerated/FeatureGeneration.RData")
setwd("J:/My Drive/Miami/Research/2018/Amir - Changepoint Paper/Code/GitHub/fatigue-changepoint")
unlink('ChangepointAnalysisForFatigueData_cache', recursive = TRUE)
applicants.df <- data.frame(matrix(nrow=70, ncol=11))
colnames(applicants.df) <- c("Name", "PhD.Degree", "PhD.School",
"Current.Job", "Current.Institution",
"Num.of.Fin50.Pubs", "Num.TierI&II.Pubs",
"Teaching.Experience", "Avg.Eval.Percent",
"Comments")
17+15+3+17+7+16+6+19+7
evals <- (17*4.38 + 15*4.69 + 3*5 + 17*4.5 + 7*4.17 + 16*4.21 + 6*4.83 + 19*4.91 + 7*4.43)/(5*107)
evals <- round((17*4.38 + 15*4.69 + 3*5 + 17*4.5 + 7*4.17 + 16*4.21 + 6*4.83 + 19*4.91 + 7*4.43)/(5*107),2)
applicants.df[1,] <- c("Ku, Chih-Hao", "Information Systems",
"Claremont", "Lawrence Technological University",
0, 5, "Yes"
evals,
"This will be his/her third move since 2012. Already held two TT positions. Num publications/yr since PhD are low. Technical.")
applicants.df[1,] <- c("Ku, Chih-Hao", "Information Systems",
"Claremont", "Lawrence Technological University",
0, 5, "Yes",
evals,
"This will be his/her third move since 2012. Already held two TT positions. Num publications/yr since PhD are low. Technical.")
applicants.df[1,] <- c("Ku, Chih-Hao", "Information Systems",
"Claremont", "Lawrence Technological University",
0, 5,
"Yes", evals,
"This will be his/her third move since 2012. Already held two TT positions. Num publications/yr since PhD are low. Technical.")
applicants.df <- data.frame(matrix(nrow=70, ncol=10))
colnames(applicants.df) <- c("Name", "PhD.Degree", "PhD.School",
"Current.Job", "Current.Institution",
"Num.of.Fin50.Pubs", "Num.TierI&II.Pubs",
"Teaching.Experience", "Avg.Eval.Percent",
"Comments")
evals <- round((17*4.38 + 15*4.69 + 3*5 + 17*4.5 + 7*4.17 + 16*4.21 + 6*4.83 + 19*4.91 + 7*4.43)/(5*107),2)
applicants.df[1,] <- c("Ku, Chih-Hao", "Information Systems","Claremont",
"Lawrence Technological University", "Assistant Professor",
0, 5,
"Yes", evals,
"This will be his/her third move since 2012. Already held two TT positions. Num publications/yr since PhD are low. Technical.")
View(applicants.df)
evals <- NA
applicants.df[2,] <- c("Chen, Hong","Information Technology", "Old Dominion",
"PhD Candidate", "Old Dominion",
0, 0,
"No", evals,
"No quality pubs and no teaching experience"
)
evals <- NA
applicants.df[1,] <- c("Ku, Chih-Hao", "Information Systems and Technology","Claremont",
"Assistant Professor", "Lawrence Technological University",
0, 5,
"Yes", evals,
"This will be his/her third move since 2012. Already held two TT positions. Num publications/yr since PhD are low. Cyber.")
evals <- NA
applicants.df[2,] <- c("Chen, Hong","Information Technology", "Old Dominion",
"PhD Candidate", "Old Dominion",
0, 0,
"No", evals,
"No quality pubs and no teaching experience"
)
applicants.df[3,] <- c("Ray, Abhishek", "Information Systems",
"PhD Candidate", "Purdue",
0, 0,
"Yes", evals,
"Has two MS from Purdue [Economics and Industrial Engineering/OR]. Has interest in emerging technologies (blockhain)")
evals <- 4.8/5
applicants.df[3,] <- c("Ray, Abhishek", "Information Systems", "Purdue"
"PhD Candidate", "Purdue",
0, 0,
"Yes", evals,
"Has two MS from Purdue [Economics and Industrial Engineering/OR]. Has interest in emerging technologies (blockhain)")
evals <- round(((14*5)+(5*4))/(5*19),2)
evals <- round(((14*5)+(5*4))/(5*19),2)
applicants.df[3,] <- c("Ray, Abhishek", "Information Systems", "Purdue",
"PhD Candidate", "Purdue",
0, 0,
"Yes", evals,
"Has two MS from Purdue [Economics and Industrial Engineering/OR]. Has interest in emerging technologies (blockhain)")
applicants.df[4,] <- c("Senthilvelmurugan, Manivannan", "MIS", "U. of Madras",
"Professor", "U. of Madras",
0, 0,
"Yes", evals,
"Has a bunch of Tier III papers. Teaching Evals = NA since not US.")
evals < round((6*4.39 + 16*4.06)/(22*5), 2)
applicants.df[5,] <- c("Ebrahimi, Mahdi", "Computer Science", "Wayne State",
"Assistant Professor", "Lawrence Technological University",
0, 0,
"Yes",evals,
"Bunch of computer science proceedings. One non-quality journal pub. Big Data.")
evals < round((6*4.39 + 16*4.06)/(22*5), 2)
applicants.df[5,] <- c("Ebrahimi, Mahdi", "Computer Science", "Wayne State",
"Assistant Professor", "Lawrence Technological University",
0, 0,
"Yes",evals,
"Bunch of computer science proceedings. One non-quality journal pub. Big Data.")
evals <- NA
evals <- round((2.95+3.49+3.38+3.61+3.52+3.63+3.53+3.71)/(4*8),2)
applicants.df[6,] <- c("Davazdahemami, Behrooz", "MS and IS", "OK State",
"PhD Candidate", "Ok State",
0, 2,
"Yes", evals,
"While his teaching evals got better, there are still some brutal comments within it. Big Data and Business Analytics")
View(applicants.df)
evals <- round((4.13+4.57)/10, 2)
applicants.df[7,] <- c("Maddah, Mahed", "MIS", "FIU",
"PhD Candidate", "FIU",
1, 1,
"Yes", evals,
"Has a Conditionally Accepted MIS. Did not appear online yet. Taught 3 classes. Big Data and Business Analytics.")
evals <- round(4.5/5, 2)
applicants.df[8,] <- c("Wang, Dawei", "MIS", "Oklahoma",
"PhD Candidate", "Oklahoma",
0, 0,
"Yes",evals,
"Evaluations not official. Has three proceedings. Seems to me that research is: IT Strategy.")
evals <- NA
applicants.df[9,] <- c("Li, Jing", "MIS", "Hong Kong Polytechnic University",
"PostDoc", "Hong Kong Polytechnic University",
0, 0,
"Yes", NA,
"Has several FT50 papers past first submission which is promising.")
evals <- round((4.3+4.39+3.63)/15, 2)
applicants.df[10,] <- c("Jiang, Haoqiang", "MIS", "FIU",
"PhD Candidate", "FIU",
0, 1,
"Yes", evals,
"Has an MBA and a MS in Sports Admin from Ball State. Has published in Journal of Computer Information Systems. Research: IT Strategy.")
evals <- NA
evals <- round((1-(1.7/5)))
evals <- round((1-(1.7/5)),2)
evals <- round((1-(0.7/5)),2)
applicants.df[11,] <- c("Nosrati, Fariba", "IS", "McMaster",
"PhD Candidate", "McMaster",
0, 0,
"Yes", evals,
"Teaching evaluations in Canada are inverted (i.e. 1 is best). So I inverted it. Not exactly sure what is her reserach.")
library(pacman)
knitr::opts_chunk$set(echo = TRUE)
rm(list = ls()) # clear global environment
graphics.off() # close all graphics
library(pacman) # needs to be installed first
p_load(R.matlab, plotly, extrafont, grDevices, gridExtra,
dplyr, stringr, tidyverse, utils, reshape2,
anomalize, forecast, MVN, fractal)
unlink('ChangepointAnalysisForFatigueData_cache', recursive = TRUE)
library(lpSolve)
obj.func <- c(390000, 180000, 140000)
lhs.cons <- matrix(c(90000,30000,40000,
300000, 150000, 100000,
1, 0, 0,
0, 1, 0,
0, 0, 1), nrow=5, ncol=3,
byrow= TRUE)
lhs.cons
signs.cons <- c("<=","<=",">=",">=",">=")
signs.cons
rhs.cons <- c(1000000,4000000,5,0,0)
rhs.cons
LP_Solution <- lp(direction="min",
obj.func,
lhs.cons,
signs.cons,
rhs.cons)
LP_Solution$objval
LP_Solution$solution

# Making the DF divisiable by the window size
# (i.e., we are removing the remainder so that our chunks)
# are equally sized
rows.to.keep <- nrow(df[,2:4]) %/% window.size
remainder <- nrow(df[,2:4]) %% window.size
df.MultivariateChangepoint<- df[1:(nrow(df)-remainder),
2:4] %>% as.matrix()
# Utilizing the e.agglo() from the ecp package
mem <- rep(1:rows.to.keep, each=window.size)
y = e.agglo(X=df.MultivariateChangepoint,
member= mem,
alpha = 1,
penalty = pen)
changepoints[[i]] <- y$estimates
}
changepoints
cat("\014")
setwd("J:/My Drive/Miami/Research/2018/Amir - Changepoint Paper/Code/GitHub/fatigue-changepoint")
cat("\014")
library(pacman)
p_load(ecp,dplyr)
load(file = "./Data/RGenerated/MedianFilteredData.RData")
# Setting Parameters for the e.agglo function based on JSS Paper
pen <- function(x) -length(x) #Equally penalizes every additional changepoint
window.size <- 60
changepoints <- list()
for (i in 1:15) {
df <- get(paste0("subject",i,"_medianf"))
# Making the DF divisiable by the window size
# (i.e., we are removing the remainder so that our chunks)
# are equally sized
rows.to.keep <- nrow(df[,2:4]) %/% window.size
remainder <- nrow(df[,2:4]) %% window.size
df.MultivariateChangepoint<- df[1:(nrow(df)-remainder),
2:4] %>% as.matrix()
# Utilizing the e.agglo() from the ecp package
mem <- rep(1:rows.to.keep, each=window.size)
y = e.agglo(X=df.MultivariateChangepoint,
member= mem,
alpha = 1,
penalty = pen)
changepoints[[i]] <- y$estimates
}
changepoints
setwd("J:/My Drive/Miami/Research/2018/Amir - Changepoint Paper/Code/GitHub/fatigue-changepoint")
cat("\014")
library(pacman)
p_load(ecp,dplyr)
load(file = "./Data/RGenerated/MedianFilteredData.RData")
# Setting Parameters for the e.agglo function based on JSS Paper
pen <- function(x) -length(x) #Equally penalizes every additional changepoint
window.size <- 30
changepoints <- list()
for (i in 1:15) {
df <- get(paste0("subject",i,"_medianf"))
# Making the DF divisiable by the window size
# (i.e., we are removing the remainder so that our chunks)
# are equally sized
rows.to.keep <- nrow(df[,2:4]) %/% window.size
remainder <- nrow(df[,2:4]) %% window.size
df.MultivariateChangepoint<- df[1:(nrow(df)-remainder),
2:4] %>% as.matrix()
# Utilizing the e.agglo() from the ecp package
mem <- rep(1:rows.to.keep, each=window.size)
y = e.agglo(X=df.MultivariateChangepoint,
member= mem,
alpha = 1,
penalty = pen)
changepoints[[i]] <- y$estimates
}
changepoints
setwd("J:/My Drive/Miami/Research/2018/Amir - Changepoint Paper/Code/GitHub/fatigue-changepoint")
cat("\014")
library(pacman)
p_load(ecp,dplyr)
load(file = "./Data/RGenerated/MedianFilteredData.RData")
# Setting Parameters for the e.agglo function based on JSS Paper
pen <- function(x) -length(x) #Equally penalizes every additional changepoint
window.size <- 30
changepoints <- list()
for (i in 1:15) {
df <- get(paste0("subject",i,"_medianf"))
# Making the DF divisiable by the window size
# (i.e., we are removing the remainder so that our chunks)
# are equally sized
rows.to.keep <- nrow(df[,2:4]) %/% window.size
remainder <- nrow(df[,2:4]) %% window.size
df.MultivariateChangepoint<- df[1:(nrow(df)-remainder),
2:4] %>% as.matrix()
# Utilizing the e.agglo() from the ecp package
mem <- rep(1:rows.to.keep, each=window.size)
y = e.agglo(X=df.MultivariateChangepoint,
member= mem,
alpha = 1,
penalty = pen)
changepoints[[i]] <- y$estimates
}
changepoints
setwd("J:/My Drive/Miami/Research/2018/Amir - Changepoint Paper/Code/GitHub/fatigue-changepoint")
cat("\014")
library(pacman)
p_load(ecp,dplyr)
load(file = "./Data/RGenerated/MedianFilteredData.RData")
# Setting Parameters for the e.agglo function based on JSS Paper
pen <- function(x) -length(x) #Equally penalizes every additional changepoint
window.size <- 30
changepoints <- list()
for (i in 1:15) {
df <- get(paste0("subject",i,"_median_diff_f"))
# Making the DF divisiable by the window size
# (i.e., we are removing the remainder so that our chunks)
# are equally sized
rows.to.keep <- nrow(df[,2:4]) %/% window.size
remainder <- nrow(df[,2:4]) %% window.size
df.MultivariateChangepoint<- df[1:(nrow(df)-remainder),
2:4] %>% as.matrix()
# Utilizing the e.agglo() from the ecp package
mem <- rep(1:rows.to.keep, each=window.size)
y = e.agglo(X=df.MultivariateChangepoint,
member= mem,
alpha = 1,
penalty = pen)
changepoints[[i]] <- y$estimates
}
changepoints
setwd("J:/My Drive/Miami/Research/2018/Amir - Changepoint Paper/Code/GitHub/fatigue-changepoint")
cat("\014")
library(pacman)
p_load(ecp,dplyr)
load(file = "./Data/RGenerated/MedianFilteredData.RData")
# Setting Parameters for the e.agglo function based on JSS Paper
pen <- function(x) -length(x) #Equally penalizes every additional changepoint
window.size <- 15
changepoints <- list()
for (i in 1:15) {
df <- get(paste0("subject",i,"_median_diff_f"))
# Making the DF divisiable by the window size
# (i.e., we are removing the remainder so that our chunks)
# are equally sized
rows.to.keep <- nrow(df[,2:4]) %/% window.size
remainder <- nrow(df[,2:4]) %% window.size
df.MultivariateChangepoint<- df[1:(nrow(df)-remainder),
2:4] %>% as.matrix()
# Utilizing the e.agglo() from the ecp package
mem <- rep(1:rows.to.keep, each=window.size)
y = e.agglo(X=df.MultivariateChangepoint,
member= mem,
alpha = 1,
penalty = pen)
changepoints[[i]] <- y$estimates
}
changepoints
setwd("J:/My Drive/Miami/Research/2018/Amir - Changepoint Paper/Code/GitHub/fatigue-changepoint")
cat("\014")
library(pacman)
p_load(ecp,dplyr)
load(file = "./Data/RGenerated/MedianFilteredData.RData")
# Setting Parameters for the e.agglo function based on JSS Paper
pen <- function(x) -length(x) #Equally penalizes every additional changepoint
window.size <- 300
changepoints <- list()
for (i in 1:15) {
df <- get(paste0("subject",i,"_medianf"))
# Making the DF divisiable by the window size
# (i.e., we are removing the remainder so that our chunks)
# are equally sized
rows.to.keep <- nrow(df[,2:4]) %/% window.size
remainder <- nrow(df[,2:4]) %% window.size
df.MultivariateChangepoint<- df[1:(nrow(df)-remainder),
2:4] %>% as.matrix()
# Utilizing the e.agglo() from the ecp package
mem <- rep(1:rows.to.keep, each=window.size)
y = e.agglo(X=df.MultivariateChangepoint,
member= mem,
alpha = 1,
penalty = pen)
changepoints[[i]] <- y$estimates
}
changepoints
setwd("J:/My Drive/Miami/Research/2018/Amir - Changepoint Paper/Code/GitHub/fatigue-changepoint")
cat("\014")
library(pacman)
p_load(ecp,dplyr)
load(file = "./Data/RGenerated/MedianFilteredData.RData")
# Setting Parameters for the e.agglo function based on JSS Paper
pen <- function(x) -length(x) #Equally penalizes every additional changepoint
window.size <- 180
changepoints <- list()
for (i in 1:15) {
df <- get(paste0("subject",i,"_medianf"))
# Making the DF divisiable by the window size
# (i.e., we are removing the remainder so that our chunks)
# are equally sized
rows.to.keep <- nrow(df[,2:4]) %/% window.size
remainder <- nrow(df[,2:4]) %% window.size
df.MultivariateChangepoint<- df[1:(nrow(df)-remainder),
2:4] %>% as.matrix()
# Utilizing the e.agglo() from the ecp package
mem <- rep(1:rows.to.keep, each=window.size)
y = e.agglo(X=df.MultivariateChangepoint,
member= mem,
alpha = 1,
penalty = pen)
changepoints[[i]] <- y$estimates
}
changepoints
setwd("J:/My Drive/Miami/Research/2018/Amir - Changepoint Paper/Code/GitHub/fatigue-changepoint")
cat("\014")
library(pacman)
p_load(ecp,dplyr)
load(file = "./Data/RGenerated/MedianFilteredData.RData")
# Setting Parameters for the e.agglo function based on JSS Paper
pen <- function(x) -length(x) #Equally penalizes every additional changepoint
window.size <- 30
changepoints <- list()
for (i in 1:15) {
df <- get(paste0("subject",i,"_medianf"))
# Making the DF divisiable by the window size
# (i.e., we are removing the remainder so that our chunks)
# are equally sized
rows.to.keep <- nrow(df[,2:4]) %/% window.size
remainder <- nrow(df[,2:4]) %% window.size
df.MultivariateChangepoint<- df[1:(nrow(df)-remainder),
2:4] %>% as.matrix()
# Utilizing the e.agglo() from the ecp package
mem <- rep(1:rows.to.keep, each=window.size)
y = e.agglo(X=df.MultivariateChangepoint,
member= mem,
alpha = 1,
penalty = pen)
changepoints[[i]] <- y$estimates
}
changepoints
setwd("J:/My Drive/Miami/Research/2018/Amir - Changepoint Paper/Code/GitHub/fatigue-changepoint")
cat("\014")
library(pacman)
p_load(ecp,dplyr)
load(file = "./Data/RGenerated/MedianFilteredData.RData")
# Setting Parameters for the e.agglo function based on JSS Paper
pen <- function(x) -length(x) #Equally penalizes every additional changepoint
window.size <- 60
changepoints <- list()
for (i in 1:15) {
df <- get(paste0("subject",i,"_medianf"))
# Making the DF divisiable by the window size
# (i.e., we are removing the remainder so that our chunks)
# are equally sized
rows.to.keep <- nrow(df[,2:4]) %/% window.size
remainder <- nrow(df[,2:4]) %% window.size
df.MultivariateChangepoint<- df[1:(nrow(df)-remainder),
2:4] %>% as.matrix()
# Utilizing the e.agglo() from the ecp package
mem <- rep(1:rows.to.keep, each=window.size)
y = e.agglo(X=df.MultivariateChangepoint,
member= mem,
alpha = 1,
penalty = pen)
changepoints[[i]] <- y$estimates
}
changepoints
setwd("J:/My Drive/Miami/Research/2018/Amir - Changepoint Paper/Code/GitHub/fatigue-changepoint")
cat("\014")
library(pacman)
p_load(ecp,dplyr)
load(file = "./Data/RGenerated/MedianFilteredData.RData")
# Setting Parameters for the e.agglo function based on JSS Paper
pen <- function(x) -length(x) #Equally penalizes every additional changepoint
window.size <- 120
changepoints <- list()
for (i in 1:15) {
df <- get(paste0("subject",i,"_medianf"))
# Making the DF divisiable by the window size
# (i.e., we are removing the remainder so that our chunks)
# are equally sized
rows.to.keep <- nrow(df[,2:4]) %/% window.size
remainder <- nrow(df[,2:4]) %% window.size
df.MultivariateChangepoint<- df[1:(nrow(df)-remainder),
2:4] %>% as.matrix()
# Utilizing the e.agglo() from the ecp package
mem <- rep(1:rows.to.keep, each=window.size)
y = e.agglo(X=df.MultivariateChangepoint,
member= mem,
alpha = 1,
penalty = pen)
changepoints[[i]] <- y$estimates
}
changepoints
setwd("J:/My Drive/Miami/Research/2018/Amir - Changepoint Paper/Code/GitHub/fatigue-changepoint")
cat("\014")
library(pacman)
p_load(ecp,dplyr)
load(file = "./Data/RGenerated/MedianFilteredData.RData")
# Setting Parameters for the e.agglo function based on JSS Paper
pen <- function(x) -length(x) #Equally penalizes every additional changepoint
window.size <- 300
changepoints <- list()
for (i in 1:15) {
df <- get(paste0("subject",i,"_medianf"))
# Making the DF divisiable by the window size
# (i.e., we are removing the remainder so that our chunks)
# are equally sized
rows.to.keep <- nrow(df[,2:4]) %/% window.size
remainder <- nrow(df[,2:4]) %% window.size
df.MultivariateChangepoint<- df[1:(nrow(df)-remainder),
2:4] %>% as.matrix()
# Utilizing the e.agglo() from the ecp package
mem <- rep(1:rows.to.keep, each=window.size)
y = e.agglo(X=df.MultivariateChangepoint,
member= mem,
alpha = 1,
penalty = pen)
changepoints[[i]] <- y$estimates
}
changepoints
setwd("J:/My Drive/Miami/Research/2018/Amir - Changepoint Paper/Code/GitHub/fatigue-changepoint")
cat("\014")
library(pacman)
p_load(ecp,dplyr)
load(file = "./Data/RGenerated/MedianFilteredData.RData")
# Setting Parameters for the e.agglo function based on JSS Paper
pen <- function(x) -length(x) #Equally penalizes every additional changepoint
window.size <- 600
changepoints <- list()
for (i in 1:15) {
df <- get(paste0("subject",i,"_medianf"))
# Making the DF divisiable by the window size
# (i.e., we are removing the remainder so that our chunks)
# are equally sized
rows.to.keep <- nrow(df[,2:4]) %/% window.size
remainder <- nrow(df[,2:4]) %% window.size
df.MultivariateChangepoint<- df[1:(nrow(df)-remainder),
2:4] %>% as.matrix()
# Utilizing the e.agglo() from the ecp package
mem <- rep(1:rows.to.keep, each=window.size)
y = e.agglo(X=df.MultivariateChangepoint,
member= mem,
alpha = 1,
penalty = pen)
changepoints[[i]] <- y$estimates
}
changepoints
setwd("J:/My Drive/Miami/Research/2018/Amir - Changepoint Paper/Code/GitHub/fatigue-changepoint")
cat("\014")
library(pacman)
p_load(ecp,dplyr)
load(file = "./Data/RGenerated/MedianFilteredData.RData")
# Setting Parameters for the e.agglo function based on JSS Paper
pen <- function(x) -length(x) #Equally penalizes every additional changepoint
window.size <- 60
changepoints <- list()
for (i in 1:15) {
df <- get(paste0("subject",i,"_medianf"))
# Making the DF divisiable by the window size
# (i.e., we are removing the remainder so that our chunks)
# are equally sized
rows.to.keep <- nrow(df[,2:4]) %/% window.size
remainder <- nrow(df[,2:4]) %% window.size
df.MultivariateChangepoint<- df[1:(nrow(df)-remainder),
2:4] %>% as.matrix()
# Utilizing the e.agglo() from the ecp package
mem <- rep(1:rows.to.keep, each=window.size)
y = e.agglo(X=df.MultivariateChangepoint,
member= mem,
alpha = 1,
penalty = pen)
changepoints[[i]] <- y$estimates
}
changepoints
setwd("J:/My Drive/Miami/Research/2018/Amir - Changepoint Paper/Code/GitHub/fatigue-changepoint")
rm(list = ls())
cat("\014")
library(pacman)
p_load(ecp,dplyr)
load(file = "./Data/RGenerated/MedianFilteredData.RData")
# Setting Parameters for the e.agglo function based on JSS Paper
pen <- function(x) -length(x) #Equally penalizes every additional changepoint
window.size <- 120
changepoints <- list()
for (i in 1:15) {
df <- get(paste0("subject",i,"_medianf"))
# Making the DF divisiable by the window size
# (i.e., we are removing the remainder so that our chunks)
# are equally sized
rows.to.keep <- nrow(df[,2:4]) %/% window.size
remainder <- nrow(df[,2:4]) %% window.size
df.MultivariateChangepoint<- df[1:(nrow(df)-remainder),
2:4] %>% as.matrix()
# Utilizing the e.agglo() from the ecp package
mem <- rep(1:rows.to.keep, each=window.size)
y = e.agglo(X=df.MultivariateChangepoint,
member= mem,
alpha = 1,
penalty = pen)
changepoints[[i]] <- y$estimates
}
changepoints
setwd("J:/My Drive/Miami/Research/2018/Amir - Changepoint Paper/Code/GitHub/fatigue-changepoint")
rm(list = ls())
cat("\014")
library(pacman)
p_load(ecp,dplyr)
load(file = "./Data/RGenerated/MedianFilteredData.RData")
# Setting Parameters for the e.agglo function based on JSS Paper
pen <- function(x) -length(x) #Equally penalizes every additional changepoint
window.size <- 60
changepoints <- list()
for (i in 1:15) {
df <- get(paste0("subject",i,"_medianf"))
# Making the DF divisiable by the window size
# (i.e., we are removing the remainder so that our chunks)
# are equally sized
rows.to.keep <- nrow(df[,2:4]) %/% window.size
remainder <- nrow(df[,2:4]) %% window.size
df.MultivariateChangepoint<- df[1:(nrow(df)-remainder),
2:4] %>% as.matrix()
# Utilizing the e.agglo() from the ecp package
mem <- rep(1:rows.to.keep, each=window.size)
y = e.agglo(X=df.MultivariateChangepoint,
member= mem,
alpha = 1,
penalty = pen)
changepoints[[i]] <- y$estimates
}
changepoints
setwd("J:/My Drive/Miami/Research/2018/Amir - Changepoint Paper/Code/GitHub/fatigue-changepoint")
rm(list = ls())
cat("\014")
library(pacman)
p_load(ecp,dplyr)
load(file = "./Data/RGenerated/MedianFilteredData.RData")
# Setting Parameters for the e.agglo function based on JSS Paper
pen <- function(x) -length(x) #Equally penalizes every additional changepoint
window.size <- 100
changepoints <- list()
for (i in 1:15) {
df <- get(paste0("subject",i,"_medianf"))
# Making the DF divisiable by the window size
# (i.e., we are removing the remainder so that our chunks)
# are equally sized
rows.to.keep <- nrow(df[,2:4]) %/% window.size
remainder <- nrow(df[,2:4]) %% window.size
df.MultivariateChangepoint<- df[1:(nrow(df)-remainder),
2:4] %>% as.matrix()
# Utilizing the e.agglo() from the ecp package
mem <- rep(1:rows.to.keep, each=window.size)
y = e.agglo(X=df.MultivariateChangepoint,
member= mem,
alpha = 1,
penalty = pen)
changepoints[[i]] <- y$estimates
}
changepoints
setwd("J:/My Drive/Miami/Research/2018/Amir - Changepoint Paper/Code/GitHub/fatigue-changepoint")
rm(list = ls())
cat("\014")
library(pacman)
p_load(ecp,dplyr)
load(file = "./Data/RGenerated/MedianFilteredData.RData")
# Setting Parameters for the e.agglo function based on JSS Paper
pen <- function(x) -length(x) #Equally penalizes every additional changepoint
window.size <- 120
changepoints <- list()
for (i in 1:15) {
df <- get(paste0("subject",i,"_medianf"))
# Making the DF divisiable by the window size
# (i.e., we are removing the remainder so that our chunks)
# are equally sized
rows.to.keep <- nrow(df[,2:4]) %/% window.size
remainder <- nrow(df[,2:4]) %% window.size
df.MultivariateChangepoint<- df[1:(nrow(df)-remainder),
2:4] %>% as.matrix()
# Utilizing the e.agglo() from the ecp package
mem <- rep(1:rows.to.keep, each=window.size)
y = e.agglo(X=df.MultivariateChangepoint,
member= mem,
alpha = 1,
penalty = pen)
changepoints[[i]] <- y$estimates
}
changepoints
setwd("J:/My Drive/Miami/Research/2018/Amir - Changepoint Paper/Code/GitHub/fatigue-changepoint")
rm(list = ls())
cat("\014")
library(pacman)
p_load(ecp,dplyr)
load(file = "./Data/RGenerated/MedianFilteredData.RData")
# Setting Parameters for the e.agglo function based on JSS Paper
pen <- function(x) -length(x) #Equally penalizes every additional changepoint
window.size <- 60
changepoints <- list()
for (i in 1:15) {
df <- get(paste0("subject",i,"_medianf"))
# Making the DF divisiable by the window size
# (i.e., we are removing the remainder so that our chunks)
# are equally sized
rows.to.keep <- nrow(df[,2:4]) %/% window.size
remainder <- nrow(df[,2:4]) %% window.size
df.MultivariateChangepoint<- df[1:(nrow(df)-remainder),
2:4] %>% as.matrix()
# Utilizing the e.agglo() from the ecp package
mem <- rep(1:rows.to.keep, each=window.size)
y = e.agglo(X=df.MultivariateChangepoint,
member= mem,
alpha = 1,
penalty = pen)
changepoints[[i]] <- y$estimates
}
changepoints
i=1
length(changepoints[[i]])
load(file = "./Data/RGenerated/MedianFilteredData.RData")
View(subject1_median_diff_f)
